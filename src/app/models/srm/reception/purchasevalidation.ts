export class PurchaseValidation {

idPurchase: number=-1;
idBranch: number=-1;
branchName: string="";
idArea: number =-1;
area: string ="";
idTypeOpetarionDocument:number=-1;
typeOpetarionDocument:string="";
idOperationDocument:number=-1;
idEstatus:number=-1;
idClassification:number=-1;
idTypeTransaction:number=-1;
idSupplier:number=-1;
idUserCreate:number=-1;
idUserUpdate:number=-1;
idUserValidate:number=-1;
idUserApproved:number=-1;
idConditionPayment:number=-1;
cantPlazo:number=-1;
idTypeNegotiation:number=-1;
idTypeCoinSupplier:number=-1;
idTypeCoinNegotiation:number=-1;
idTypeCoinInternal:number=-1;
idCoinSupplier:number=-1;
idCoinNegotiation:number=-1;
idCoinInternal:number=-1;
idRateChangeSupplier:number=-1;
idRateChangeNegotiation:number=-1;
idRateChangeInternal:number=-1;
idWayPayment:number=-1;
idPlanTax:number=-1;
numberInvoice:string="";
numberDocument:string="";
controlNumber:string="";
serieNumber:string="";
invoiceAmountBase:number=0;
invoiceAmountTotal:number=0;
diferenceBase:number=0;
invoiceAmountConversion:number=0;
invoiceAmountTotalConversion:number=0;
diferenceConversion:number=0;
percentage:number=0;
exchangeRateSupplier:number=0;
exchangeRateNegotiation:number=0;
exchangeRateInternal:number=0;
indBaseCoin:boolean= false;
totalTaxable:number=0;
totalDeductible:number=0;
createDate:Date;
updateDate:Date;
validationStartDate:Date;
validationStartEnd:Date;
invoiceDate:Date;
}